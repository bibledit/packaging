Steps to build the Debian package.


On Debian, clone the repository.
$ gbp clone --all git+ssh://joe@scm.alioth.debian.org/git/pkg-crosswire/bibledit-gtk.git
The above repository no longer exists, a temporal replaceent is this:
$ gbp clone --all https://<username>:<password>@github.com/bibledit/debianclient.git


On macOS, create a tarball suitable for Debian.
$ ./tarball.sh


Pull all changes.
$ gbp pull --all


Remove untracked files from the working tree
$ git clean -f


Sign tags and commits.
The automated tools expect gpg-agent to provide the passphrase.
To be sure the passphrase is stored, manually sign a file:
$ gpg --sign <file>
It will ask for the passphrase, if gpg-agent cannot provide it.
This will store the passphrase for the automated tools to use.


Import the upstream tarball and use pristine-tar and sign tags.
See: https://honk.sigxcpu.org/projects/git-buildpackage/manual-html/gbp.import.new.upstream.html
$ gbp import-orig --pristine-tar --sign-tags ../*.tar.gz



Check that it signed the upstream tag.
$ git tag | grep upstream
$ git show <tag>



Sign the above commit manually.
$ git commit -S --amend



Check that it signed the last commit.
$ git log --show-signature -2
More information: https://harryrschwartz.com/2014/11/01/automatically-signing-your-git-commits.html



Update the debian/changelog to the correct version.
$ gbp dch --git-author --release



Build the package:
$ gbp buildpackage --git-export-dir=/tmp/
When having uncommitted changes in the branch:
$ gbp buildpackage --git-ignore-new --git-export-dir=/tmp/



Do a number of checks.
$ lintian --display-info --pedantic --no-tag-display-limit --info /tmp/*changes /tmp/*deb /tmp/*dsc
$ debc *.changes
$ git diff <commit>


Test the package.


Package is OK: Sign the tag and build sources only with -S :
$ gbp buildpackage -S --git-tag --git-sign --git-export-dir=/tmp/


Upload the package:
$ dupload --to anonymous-ftp-master /tmp/*.changes
$ rm /tmp/*


Push the changes to the remote repository.
$ gbp push --pristine-tar
$ git push --all
$ git push --tags

