Steps to build the Debian packages.


On Debian, clone the repository.
$ gbp clone --all git@salsa.debian.org:pkg-crosswire-team/bibledit.git
$ gbp clone --all git@salsa.debian.org:debian/bibledit-cloud.git
$ gbp clone --all git@salsa.debian.org:debian/bibledit-desktop.git
$ gbp clone --all git@salsa.debian.org:pkg-crosswire-team/sword-comm-mhc.git


On macOS, create a tarball suitable for Debian.
$ ./tarball-client.sh
$ ./tarball-cloud.sh
Or download one for bibledit-desktop.

Or download upstream tarball:
$ uscan --download-current-version --verbose


Pull all changes.
$ gbp pull --all


Remove untracked files from the working tree
$ git clean -fd


Sign tags and commits.
The automated tools expect gpg-agent to provide the passphrase.
To be sure the passphrase is stored, manually sign a file:
$ gpg --sign <file>
It will ask for the passphrase, if gpg-agent cannot provide it.
This will store the passphrase for the automated tools to use.


Import the upstream tarball and use pristine-tar and sign tags.
See: https://honk.sigxcpu.org/projects/git-buildpackage/manual-html/gbp.import.new.upstream.html
$ gbp import-orig --pristine-tar --sign-tags ../*.tar.gz
$ gbp import-orig --pristine-tar --sign-tags ../*.tar.xz



Check that it signed the upstream tag.
$ git tag | grep upstream
$ git show <tag>



Optionally sign the above commit manually.
$ git commit -S --amend



Check that it signed the last commit.
$ git log --show-signature -2
More information: https://harryrschwartz.com/2014/11/01/automatically-signing-your-git-commits.html



Patches:
$ gbp pq import
Make commits to create another patch.
$ git add debian/patches
$ git commit ...
$ gbp pq export
$ gbp pq drop



Update the debian/changelog to the correct version.
$ gbp dch --git-author
$ gbp dch --git-author --release
Without doing the above, the package won't build.



Build the package:
$ gbp buildpackage --git-export-dir=/tmp/
When having uncommitted changes in the branch:
$ gbp buildpackage --git-ignore-new --git-export-dir=/tmp/
When on the patch queue branch:
$ gbp buildpackage --git-ignore-branch --git-export-dir=/tmp/



Do a number of checks.
$ lintian --display-info --pedantic --no-tag-display-limit --info /tmp/*changes /tmp/*deb /tmp/*dsc
$ debc *.changes
$ git diff <commit>
$ dpkg-deb -c foo.deb
$ licensecheck --check '.*' --recursive --deb-machine --lines 0 *
  

Test the package.


Package is OK: Sign the tag and build sources only with -S :
$ rm /tmp/*
$ gbp buildpackage -S --git-tag --git-sign --git-export-dir=/tmp/
To include the .orig.tar.gz, add the -sa switch. 
To force the exclusion of the original source, add the -sd switch.


Upload the package:
# $ dupload --to anonymous-ftp-master /tmp/*.changes
$ dput /tmp/*.changes
$ rm /tmp/*


Push the changes to the remote repository.
$ gbp push --pristine-tar
$ git push --all
$ git push --tags



Notes
=====


To find the reverse dependencies:
$ apt rdepends libsword*


Update path:
export PATH=$PATH:/sbin:/usr/sbin


Repack to +dfsg file:
https://wiki.debian.org/Javascript/Repacking



To build source-only package.
$ debuild -S
